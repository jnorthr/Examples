/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_groovy_projects.html
 */
//import org.apache.ivy.plugins.resolver.URLResolver

// Apply the groovy plugin to add support for Groovy
plugins {
    id 'java'
    id 'groovy'
}

defaultTasks 'clean', 'build', 'groovydoc', 'javadoc', 'runHammer', 'runBind', 'runFile','runSwing', 'runVisit' 

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:3.0.9'
	implementation 'org.slf4j:slf4j-api:1.6.1'
	implementation group: 'ch.qos.logback', name: 'logback-classic', version: '0.9.28'

    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'junit:junit:4.13'
    //implementation 'com.h2database:h2:1.4.191'
}

test {
    testLogging {
        exceptionFormat "full"
    
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        showStandardStreams = true
    }
}

// runs the main() method; args are ignored but maybe later ?
task(runHammer, dependsOn: 'classes', type: JavaExec) {
		main = 'Hammer'
		classpath = sourceSets.main.runtimeClasspath
		//args 'jimbo', 'hi kids'
		//systemProperty 'simple.message', 'Hi kids '
} // end of task

// runs the script method; args are ignored but maybe later ?
task(runBind, dependsOn: 'classes', type: JavaExec) {
		main = 'ClientTransaction'
		classpath = sourceSets.main.runtimeClasspath
        args '/Users/owner/Download/Dropbox' 
} // end of task

// runs the script method; args are ignored but maybe later ?
task(runFile, dependsOn: 'classes', type: JavaExec) {
        main = 'FindFile'
        classpath = sourceSets.main.runtimeClasspath
        args '/Users/owner/Downloads/Dropbox' 
} // end of task


// runs the script method; args are ignored but maybe later ?
task(runVisit, dependsOn: 'classes', type: JavaExec) {
        main = 'NewestFileVisitor'
        classpath = sourceSets.main.runtimeClasspath
        args '/Users/owner/Downloads/Dropbox' 
} // end of task


// runs the script method; args are ignored but maybe later ?
task(runSwing, dependsOn: 'classes', type: JavaExec) {
        main = 'SampleSwingBuilder'
        classpath = sourceSets.main.runtimeClasspath
} // end of task
